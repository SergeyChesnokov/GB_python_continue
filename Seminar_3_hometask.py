# //////////////////   Hometask   //////////////////
# 1. Дан список повторяющихся элементов. Вернуть список
# с дублирующимися элементами. В результирующем списке
# не должно быть дубликатов.

# 2. В большой текстовой строке подсчитать количество встречаемых
# слов и вернуть 10 самых частых. Не учитывать знаки препинания
# и регистр символов. За основу возьмите любую статью
# из википедии или из документации к языку.

# 3.  Создайте словарь со списком вещей для похода в качестве
# ключа и их массой в качестве значения. Определите какие
# вещи влезут в рюкзак передав его максимальную
# грузоподъёмность. Достаточно вернуть один допустимый вариант.

# 4. *Верните все возможные варианты комплектации рюкзака.

# ----------------------------------------------------------


# 1. Дан список повторяющихся элементов. Вернуть список
# с дублирующимися элементами. В результирующем списке
# не должно быть дубликатов.

# lst = [1, 2, 3, 2, 5, 7, 1, 8, 4, 5, 3, 1]
# lst_=[]

# for i in lst:
#     a = lst.count(i)
#     if a > 1:
#         lst_.append(i)

# print(list(set(lst_)))

# 2. В большой текстовой строке подсчитать количество встречаемых
# слов и вернуть 10 самых частых. Не учитывать знаки препинания
# и регистр символов. За основу возьмите любую статью
# из википедии или из документации к языку.

txt = 'Иван-царевич выступает в сказках в двух разных образах: \
положительный персонаж, борющийся со злом, помогающий обиженным \
или слабым. Очень часто в начале сказки Иван-царевич беден, потерян \
родителями, преследуется врагами, не знает о своем царском происхождении. \
В таких сказках как награду за героическое поведение и добрые дела Иван-царевич \
получает назад своё царство, трон или находит своих царственных родителей. \
Но даже если он изначально царевич, то в конце сказки он обычно получает \
своеобразный приз в виде чужого полцарства, царской или королевской дочери, \
волшебного или дорогого коня, драгоценных или волшебных предметов или даже дополнительного \
ума или волшебных умений. \
отрицательный персонаж, который обычно противопоставляется персонажу простого происхождения, \
например, Ивану-рыбацкому сыну. В этом случае Иван-царевич зол, коварен и различными способами \
пытается погубить положительных героев и отнять у них заслуженную награду. В конце бывает \
посрамлен и наказан, но практически во всех случаях остаётся жив. Как сказочный персонаж, \
Иван-царевич связан чаще всего только с несколькими определёнными \
сюжетами. Каждый такой сюжет от сказки к сказке почти не меняется, \
меняются только описания действующих лиц и их имена. \
Обычно Иван-царевич (как и Иван-дурак) является младшим из трех сыновей царя.'

from re import sub

txt = sub(r'[.,"\'-?:!;]', '', txt)
lst = txt.lower().split()

for i in lst:
    a = lst.count(i)
    if a > 1:
        print(i, a)


# !!! В процессе !!! прошу дождаться завершения
